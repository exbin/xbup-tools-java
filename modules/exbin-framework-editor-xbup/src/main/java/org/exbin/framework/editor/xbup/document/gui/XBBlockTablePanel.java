/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.editor.xbup.document.gui;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.JPopupMenu;
import javax.swing.table.TableColumn;
import org.exbin.framework.App;
import org.exbin.framework.editor.xbup.document.DocumentItemSelectionListener;
import org.exbin.framework.editor.xbup.document.XbupTreeDocument;
import org.exbin.framework.language.api.LanguageModuleApi;
import org.exbin.framework.utils.TestApplication;
import org.exbin.framework.utils.UtilsModule;
import org.exbin.framework.utils.WindowUtils;
import org.exbin.xbup.core.block.XBTBlock;

/**
 * Child list table panel.
 *
 * @author ExBin Project (https://exbin.org)
 */
@ParametersAreNonnullByDefault
public class XBBlockTablePanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = App.getModule(LanguageModuleApi.class).getBundle(XBBlockTablePanel.class);

    private List<DocumentItemSelectionListener> itemSelectionListeners = new ArrayList<>();
    private XBBlockTableModel blockTableModel = new XBBlockTableModel();
    private XBBlockNameTableCellRenderer blockNameTableCellRenderer = new XBBlockNameTableCellRenderer();

    public XBBlockTablePanel() {
        initComponents();

        init();
    }

    private void init() {
        table.setModel(blockTableModel);
        TableColumn nameColumn = table.getColumnModel().getColumn(0);
        nameColumn.setCellRenderer(blockNameTableCellRenderer);
        table.getSelectionModel().addListSelectionListener((e) -> {
            notifyItemSelectionChanged(getSelectedItem().orElse(null));
        });
    }

    public void setTreeDocument(XbupTreeDocument treeDocument) {
        blockTableModel.setTreeDocument(treeDocument);
        blockNameTableCellRenderer.setTreeDocument(treeDocument);

    }

    public void setBlock(@Nullable XBTBlock block) {
        blockTableModel.setBlock(block);
        blockTableModel.fireTableDataChanged();
        if (block != null) {
            table.setRowSelectionInterval(0, 0);
        }
    }

    public void setPopupMenu(JPopupMenu popupMenu) {
        table.setComponentPopupMenu(popupMenu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        tableScrollPane.setViewportView(table);

        add(tableScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        TestApplication testApplication = UtilsModule.createTestApplication();
        testApplication.launch(() -> {
            testApplication.addModule(org.exbin.framework.language.api.LanguageModuleApi.MODULE_ID, new org.exbin.framework.language.api.utils.TestLanguageModule());
            WindowUtils.invokeWindow(new XBBlockTablePanel());
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables

    @Nonnull
    public Optional<XBTBlock> getSelectedItem() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow < 0) {
            return Optional.empty();
        }

        return Optional.ofNullable(blockTableModel.getRowAt(selectedRow));
    }

    public void addItemSelectionListener(DocumentItemSelectionListener listener) {
        itemSelectionListeners.add(listener);
    }

    public void removeItemSelectionListener(DocumentItemSelectionListener listener) {
        itemSelectionListeners.remove(listener);
    }

    private void notifyItemSelectionChanged(@Nullable XBTBlock item) {
        for (DocumentItemSelectionListener listener : itemSelectionListeners) {
            listener.itemSelected(item);
        }
    }
}
