/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.editor.xbup.gui;

import java.net.URI;
import java.util.ResourceBundle;
import javax.annotation.ParametersAreNonnullByDefault;
import org.exbin.framework.utils.LanguageUtils;
import org.exbin.framework.utils.WindowUtils;
import org.exbin.xbup.core.block.XBTEditableDocument;
import org.exbin.xbup.parser_tree.XBTTreeDocument;

/**
 * Dialog for document properties showing various information about file.
 *
 * @version 0.2.1 2019/06/21
 * @author ExBin Project (http://exbin.org)
 */
@ParametersAreNonnullByDefault
public class DocumentPropertiesPanel extends javax.swing.JPanel {

    private XBTEditableDocument doc;
    private final java.util.ResourceBundle resourceBundle = LanguageUtils.getResourceBundleByClass(DocumentPropertiesPanel.class);

    public DocumentPropertiesPanel() {
        initComponents();
    }

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WindowUtils.invokeDialog(new DocumentPropertiesPanel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        propertiesTabbedPane = new javax.swing.JTabbedPane();
        generalPanel = new javax.swing.JPanel();
        fileNameLabel = new javax.swing.JLabel();
        fileNameTextField = new javax.swing.JTextField();
        fileSizeTextField = new javax.swing.JTextField();
        fileTypeLabel = new javax.swing.JLabel();
        fileTypeTextField = new javax.swing.JTextField();
        fileSizeLabel = new javax.swing.JLabel();
        documentTypePanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        fileNameLabel.setText(resourceBundle.getString("fileNameLabel.text")); // NOI18N

        fileNameTextField.setEditable(false);

        fileSizeTextField.setEditable(false);

        fileTypeLabel.setText(resourceBundle.getString("fileTypeLabel.text")); // NOI18N

        fileTypeTextField.setEditable(false);

        fileSizeLabel.setText(resourceBundle.getString("fileSizeLabel.text")); // NOI18N

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileNameLabel)
                    .addComponent(fileTypeLabel)
                    .addComponent(fileSizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(fileTypeTextField)
                    .addComponent(fileSizeTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameLabel)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileSizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileTypeLabel)
                    .addComponent(fileTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        propertiesTabbedPane.addTab("General", generalPanel);

        javax.swing.GroupLayout documentTypePanelLayout = new javax.swing.GroupLayout(documentTypePanel);
        documentTypePanel.setLayout(documentTypePanelLayout);
        documentTypePanelLayout.setHorizontalGroup(
            documentTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        documentTypePanelLayout.setVerticalGroup(
            documentTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 93, Short.MAX_VALUE)
        );

        propertiesTabbedPane.addTab("Type", documentTypePanel);

        add(propertiesTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void setDocument(XBTEditableDocument document) {
        this.doc = document;
        if (doc instanceof XBTTreeDocument) {
            fileSizeTextField.setText(Long.toString(((XBTTreeDocument) doc).getDocumentSize()));
        } else {
            fileSizeTextField.setText("Unknown");
        }
    }

    public void setDocumentUri(URI fileUri) {
        fileNameTextField.setText(fileUri == null ? "" : fileUri.toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel documentTypePanel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JLabel fileSizeLabel;
    private javax.swing.JTextField fileSizeTextField;
    private javax.swing.JLabel fileTypeLabel;
    private javax.swing.JTextField fileTypeTextField;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JTabbedPane propertiesTabbedPane;
    // End of variables declaration//GEN-END:variables

    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }
}
